{"ast":null,"code":"import _classCallCheck from \"/Users/davidbuyinza/Desktop/react/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidbuyinza/Desktop/react/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidbuyinza/Desktop/react/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidbuyinza/Desktop/react/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidbuyinza/Desktop/react/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidbuyinza/Desktop/react/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0\n    };\n    _this.styles = {\n      fontSize: 50,\n      fontWeight: \"bold\"\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: updateClass(),\n        style: {\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        className: \"bbtn btn-seconday btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }, {\n    key: \"updageClass\",\n    value: function updageClass() {\n      var classes = \"badge badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/davidbuyinza/Desktop/react/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","styles","fontSize","fontWeight","updateClass","formatCount","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;UAIRC,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,K;;;;;;6BAIA;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAEC,WAAW,EAA5B;AAAgC,QAAA,KAAK,EAAE;AAAEF,UAAAA,QAAQ,EAAE;AAAZ,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,WAAL,EADH,CADF,EAIE;AAAQ,QAAA,SAAS,EAAC,8BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF;AAQD;;;kCAEa;AAAA,UACJL,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;kCAEa;AACZ,UAAIM,OAAO,GAAG,cAAd;AACAA,MAAAA,OAAO,IAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOM,OAAP;AACD;;;;EA7BmBT,S;;AAgCtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0\n  };\n\n  styles = {\n    fontSize: 50,\n    fontWeight: \"bold\"\n  };\n  render() {\n    return (\n      <div>\n        <span className={updateClass()} style={{ fontSize: 15 }}>\n          {this.formatCount()}\n        </span>\n        <button className=\"bbtn btn-seconday btn-sm m-2\">Increment</button>\n      </div>\n    );\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n  updageClass() {\n    let classes = \"badge badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}